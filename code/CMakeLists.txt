#Setup Visore
PROJECT(QAudioCoder)

#Setup CMake
CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

#Setup directory paths
SET(ROOT ${CMAKE_CURRENT_SOURCE_DIR})
SET(HEADERS ${ROOT}/headers)
SET(SOURCES ${ROOT}/sources)
SET(EXTERNAL ${ROOT}/external)
SET(EXAMPLES ${ROOT}/examples)

#Set System
IF(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
	SET(MACOSX 1)
	ADD_DEFINITIONS(-DMACOSX)
	SET(SYSTEM "MACOSX" CACHE INTERNAL "Current system")
    SET(DISTRO " " CACHE INTERNAL "Linux distrobution")    
ELSEIF(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
	ADD_DEFINITIONS(-DLINUX)
	SET(SYSTEM "LINUX" CACHE INTERNAL "Current system")
ELSEIF(${CMAKE_SYSTEM_NAME} MATCHES "Windows")
	ADD_DEFINITIONS(-DWINDOWS)
	SET(SYSTEM "WINDOWS" CACHE INTERNAL "Current system")
    SET(DISTRO " " CACHE INTERNAL "Linux distrobution")
ENDIF()

#Setup installation directory paths
IF(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
	SET(INSTALL_LIB_DIR lib/qaudiocoder)
	SET(INSTALL_INCLUDE_DIR include/qaudiocoder)
ELSE()
	SET(INSTALL_LIB_DIR lib)
	SET(INSTALL_INCLUDE_DIR include)
ENDIF()

#Setup Packaging and Version
SET(CMAKE_MODULE_PATH ${ROOT}/cmake)
include(ExternalProject) 
INCLUDE(Version)
INCLUDE(Macros)

#External projects
#EXTERNALPROJECT_ADD(libsamplerate SOURCE_DIR "${EXTERNAL}/libsamplerate" CONFIGURE_COMMAND "${EXTERNAL}/libsamplerate/configure" BUILD_IN_SOURCE 0)

#Setup Qt
SET(QT5BASE /home/visore/Qt5/qt5/qtbase)
FIND_PACKAGE(Qt5 COMPONENTS Core Multimedia Widgets Gui)

#Include common headers
HEADER_DIRECTORIES(GLOBAL_HEADERS)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR} ${GLOBAL_HEADERS})

#Initiate source files
FILE(GLOB SOURCES ${SOURCES}/*.cpp ${SOURCES}/*/*.cpp)
FILE(GLOB ALL_HEADERS ${HEADERS}/*.h ${HEADERS}/*/*.h)
SET(NORMAL_HEADERS)
SET(MOC_HEADERS)
FOREACH(HEADER ${ALL_HEADERS})
    FILE(STRINGS "${HEADER}" lines REGEX "Q_OBJECT")
    IF(lines)
        LIST(APPEND MOC_HEADERS "${HEADER}")
	ELSE()
		LIST(APPEND NORMAL_HEADERS "${HEADER}")
    ENDIF()
ENDFOREACH()

#Wrap Qt files
QT5_WRAP_CPP(WRAPPER_HEADERS ${MOC_HEADERS})

#Create shared library
ADD_LIBRARY(qaudiocoder SHARED ${WRAPPER_HEADERS} ${NORMAL_HEADERS} ${SOURCES})
SET_TARGET_PROPERTIES(qaudiocoder PROPERTIES LINKER_LANGUAGE CXX)
TARGET_LINK_LIBRARIES(qaudiocoder ${Qt5Core_LIBRARIES} ${Qt5Multimedia_LIBRARIES})
SET_TARGET_PROPERTIES(qaudiocoder PROPERTIES VERSION "${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}")
SET_TARGET_PROPERTIES(qaudiocoder PROPERTIES SOVERSION "${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}")

#Install library and header
INSTALL(TARGETS qaudiocoder DESTINATION ${INSTALL_LIB_DIR})
IF(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
	INSTALL(FILES ${ROOT}/cmake/QAudioCoderConfig.cmake DESTINATION ${INSTALL_LIB_DIR})
ENDIF()
INSTALL(FILES ${INSTALL_HEADER_FILES} DESTINATION ${INSTALL_INCLUDE_DIR})

#Create example cases
ADD_EXECUTABLE(example1 ${EXAMPLES}/example1.cpp)
TARGET_LINK_LIBRARIES(example1 qaudiocoder ${Qt5Widgets_LIBRARIES} ${Qt5Gui_LIBRARIES})

#Packaging
IF(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
	INCLUDE(Packaging)
ENDIF()
